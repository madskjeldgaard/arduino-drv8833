; The configuration file for PlatformIO
;
; This file is setup with a lot of suggestions for libraries etc.
;
; You can delete them as you wish :)
;
[platformio]
description = My cool project

; This is the default environment that will be used when you run `pio run`
default_envs = raspberrypi-pico

[env]
framework = arduino

; Use C++ version 17
build_unflags = -std=gnu++11

; Support C++ 17 and enable some warnings
build_flags = -std=gnu++17 -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unused-function -Wno-format-extra-args

; Use clang-tidy when runnning `pio check`
; https://docs.platformio.org/en/stable/advanced/static-code-analysis/tools/clang-tidy.html
check_tool = clangtidy

; Serial monitor speed, make sure this is matched in Serial.begin()
monitor_speed = 115200

# Common global libraries. Uncomment any of these to include them in the build.
lib_deps =

  # DRV8833 library
  ../../

  # SPI
  SPI

  # I2C
  Wire

[env:raspberrypi-pico]
; The Raspberry Pi Pico
; Link: https://www.raspberrypi.com/documentation/microcontrollers/raspberry-pi-pico.html
; For more information about the platformio support:
; https://arduino-pico.readthedocs.io/en/latest/platformio.html
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board_build.core = earlephilhower
board = pico
board_build.mcu = rp2040
board_build.f_cpu = 133000000L
upload_protocol = picotool
; in reference to a board = pico config (2MB flash)
; Flash Size: 2MB (Sketch: 1MB, FS:1MB)
; board_build.filesystem_size = 1m
; Flash Size: 2MB (No FS)
; board_build.filesystem_size = 0m
; Flash Size: 2MB (Sketch: 0.5MB, FS:1.5MB)
; board_build.filesystem_size = 1.5m

; Extend build flags from the global section to enable TinyUSB support
build_flags = ${env.build_flags} -DUSE_TINYUSB
lib_deps =
  ${env.lib_deps}

  # USB support
  Adafruit TinyUSB Library

[env:raspberrypi-picow]
; Extends the above to use picow instead of pico board
extends = env:raspberrypi-pico

[env:esp32dev]
platform = espressif32
board = esp32dev

[env:nodemcuv2-esp8266]
; The NodeMCU v3 board based on the ESP8266
; Commonly found on Ebay, Aliexpress, etc.

# build_flags = ${env.build_flags}
platform = espressif8266
board = nodemcuv2


[env:teensy41]
platform = teensy
board = teensy41

[env:teensy40]
platform = teensy
board = teensy40

; Teensy LC
[env:teensylc]
platform = teensy
board = teensylc

; Adafruit Feather ESP32-S2
[env:adafruit_feather_esp32s2]
platform = espressif32
board = adafruit_feather_esp32s2

; Adafruit ESP32 Feather
[env:featheresp32]
platform = espressif32
board = featheresp32
